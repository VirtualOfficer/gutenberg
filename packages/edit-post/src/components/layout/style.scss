$shadow: drop-shadow(0 -1px rgba($color: #000, $alpha: 0.133)); // 0.133 = $gray-200 but with alpha.

// If all metaboxes are hidden hides the container.
:is(.edit-post-layout__metaboxes-resizable-area, details.edit-post-layout__metaboxes)
:not(:has(.postbox:not(.is-hidden))) {
	display: none;
}

.edit-post-layout__metaboxes-resizable-area {
	padding-top: 23px;
	filter: $shadow;
	background-color: $white;

	&:not(.has-user-size) {
		max-height: 50% !important;
	}

	& .components-resizable-box__handle-top {
		top: 0;
		box-shadow: 0 $border-width $gray-300;
	}
	& .components-resizable-box__side-handle::before {
		border-radius: 0;
		top: 0;
		height: $border-width;
	}
	& .components-resizable-box__handle::after {
		background-color: $gray-300;
		box-shadow: none;
		border-radius: 4px;
		height: $grid-unit-05;
		top: calc(50% - #{$grid-unit-05} / 2);
		width: 100px;
		right: calc(50% - 50px);
	}
}

.edit-post-layout__metaboxes {
	clear: both;
	overflow: auto;
	background-color: $white;

	&:not(details) {
		max-height: 100%;
	}

	// The component renders as a details element in short viewports.
	&:is(details) {
		filter: $shadow;

		& > summary {
			cursor: pointer;
			color: $gray-900;
			background-color: $white;
			height: $button-size-compact;
			line-height: $button-size-compact;
			font-size: 13px;
			padding-left: $grid-unit-30;
		}

		&[open] > summary {
			position: sticky;
			top: 0;
			z-index: 1;
		}
	}
}

.has-metaboxes .editor-visual-editor {
	flex: 1;
}

// Adjust the position of the notices
.components-editor-notices__snackbar {
	position: fixed;
	right: 0;
	bottom: 24px;
	padding-left: 24px;
	padding-right: 24px;
}

@include editor-left(".edit-post-layout .components-editor-notices__snackbar");
