// Give the featured image placeholder the appearance of a literal image placeholder.
// @todo: this CSS is similar to that of the Site Logo. That makes it an opportunity
// to create a new component for placeholders meant to inherit some theme styles.
.wp-block-image.wp-block-image {
	// Inherit border radius from style variations.
	// @todo: this doesn't work yet, it needs for the radius and border to be applied also in the setup state.
	// https://github.com/WordPress/gutenberg/pull/42847
	border-radius: $radius-block-ui;

	.components-placeholder,
	.components-resizable-box__container {
		border-radius: inherit;
	}

	// Style the placeholder.
	.wp-block-post-featured-image__placeholder,
	.components-placeholder {
		// Fade out the diagonal placeholder onselect.
		svg {
			opacity: 0;
			transition: opacity 0.1s linear;
			@include reduce-motion("transition");
		}

		.components-button.components-button {
			opacity: 1;
			transition: opacity 0.1s linear;
			@include reduce-motion("transition");
		}

		// Show default placeholder height when not resized.
		min-height: 200px;
	}

	// Show controls on select.
	&:not(.is-selected) {

		.wp-block-post-featured-image__placeholder,
		.components-placeholder {
			color: currentColor;
			background: transparent;
			border: none;
			box-shadow: none;
		}

		svg {
			opacity: 0.4;
		}

		.components-button.components-button {
			opacity: 0;
			visibility: hidden;
		}
	}
}


figure.wp-block-image:not(.wp-block) {
	margin: 0;
}

.wp-block-image {
	position: relative;

	.is-applying img,
	&.is-transient img {
		opacity: 0.3;
	}

	figcaption img {
		display: inline;
	}

	// Shown while image is being uploaded.
	.components-spinner {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}

// This is necessary for the editor resize handles to accurately work on a non-floated, non-resized, small image.
.wp-block-image .components-resizable-box__container {
	display: inline-block;
	img {
		display: block;
		width: inherit;
		height: inherit;
	}
}

.block-editor-block-list__block[data-type="core/image"] .block-editor-block-toolbar .block-editor-url-input__button-modal {
	position: absolute;
	left: 0;
	right: 0;
	margin: -$border-width 0;

	@include break-small() {
		margin: -$border-width;
	}
}

[data-align="wide"] > .wp-block-image,
[data-align="full"] > .wp-block-image {
	img {
		height: auto;
		width: 100%;
	}
}

.wp-block[data-align="left"],
.wp-block[data-align="center"],
.wp-block[data-align="right"] {
	> .wp-block-image {
		display: table;

		> figcaption {
			display: table-caption;
			caption-side: bottom;
		}
	}
}

.wp-block[data-align="left"] > .wp-block-image {
	margin-right: 1em;
	margin-left: 0;
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.wp-block[data-align="right"] > .wp-block-image {
	margin-left: 1em;
	margin-right: 0;
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.wp-block[data-align="center"] > .wp-block-image {
	margin-left: auto;
	margin-right: auto;
	text-align: center;
}

.wp-block-image__crop-area {
	position: relative;
	max-width: 100%;
	width: 100%;
	overflow: hidden;

	// This removes the border from the img within the image cropper so it
	// can be applied to the cropper itself. This then allows the image to be
	// cropped within the visual border providing more accurate editing and
	// smoother UX.
	.reactEasyCrop_Container .reactEasyCrop_Image {
		border: none;
	}
}

.wp-block-image__crop-icon {
	padding: 0 8px;
	min-width: 48px;
	display: flex;
	justify-content: center;
	align-items: center;

	svg {
		fill: currentColor;
	}
}

.wp-block-image__zoom {
	.components-popover__content {
		min-width: 260px;
		overflow: visible !important;
	}

	.components-range-control {
		flex: 1;
	}

	.components-base-control__field {
		display: flex;
		margin-bottom: 0;
		flex-direction: column;
		align-items: flex-start;
	}
}

.wp-block-image__aspect-ratio {
	height: $grid-unit-60 - $border-width - $border-width;
	margin-bottom: -$grid-unit-10;
	display: flex;
	align-items: center;

	.components-button {
		width: $button-size;
		padding-left: 0;
		padding-right: 0;
	}
}
