version: 2.1

commands:
  yarn-install:
    steps:
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-i18n-v4-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}
      - run:
          name: Yarn Install
          command: yarn install --frozen-lockfile --prefer-offline
      - save_cache:
          name: Save Yarn Cache
          key: yarn-i18n-v4-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - i18n-cache/data
  checkout-gutenberg:
    steps:
      - run:
          name: Checkout Gutenberg
          command: git submodule update --init --recursive
  add-jest-reporter-dir:
      steps:
        - run:
            name: Create reports directory
            command: mkdir reports && mkdir reports/test-results

jobs:
  checks:
    parameters:
      platform:
        type: string
        default: ""
      check-tests:
        type: boolean
        default: false
      check-correctness:
        type: boolean
        default: false
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - checkout-gutenberg
      - yarn-install
      - add-jest-reporter-dir
      - run:
          name: Set Environment Variables
          command: |
            echo 'export CHECK_CORRECTNESS=<<parameters.check-correctness>>' >> $BASH_ENV
            echo 'export CHECK_TESTS=<<parameters.check-tests>>' >> $BASH_ENV
            echo 'export TEST_RN_PLATFORM=<<parameters.platform>>' >> $BASH_ENV
      - run:
          name: Run Checks
          command: bin/ci-checks-js.sh
          environment:
            JEST_JUNIT_OUTPUT: "reports/test-results/android-test-results.xml"
      - store_test_results:
          path: ./reports/test-results
  android-device-checks:
    docker:
    - image: circleci/android:api-29-node
    steps:
      - checkout
      - run:
          name: Checkout Gutenberg
          command: git submodule update --init --recursive
      - yarn-install
      - add-jest-reporter-dir
      - run:
          name: Set Environment Variables
          command: |
            echo 'export TEST_RN_PLATFORM=android' >> $BASH_ENV
            echo 'export TEST_ENV=sauce' >> $BASH_ENV
      - run:
          name: Bundle Android and Generate debug .apk file for testing
          command: yarn test:e2e:build-app:android
      - run:
          name: Upload apk to sauce labs
          command: |
            source bin/sauce-pre-upload.sh
            curl -u "$SAUCE_USERNAME:$SAUCE_ACCESS_KEY" -X POST -H "Content-Type: application/octet-stream" https://saucelabs.com/rest/v1/storage/automattic/Gutenberg-$SAUCE_FILENAME.apk?overwrite=true --data-binary @./android/app/build/outputs/apk/debug/app-debug.apk
      - run:
          name: Run Device Tests
          command: yarn device-tests
          environment:
            JEST_JUNIT_OUTPUT: "reports/test-results/android-test-results.xml"
      - store_test_results:
          path: ./reports/test-results
  ios-device-checks:
    macos:
      xcode: "11.2.1"
    steps:
    - checkout
    - checkout-gutenberg
    - yarn-install
    - add-jest-reporter-dir
    - run:
        name: Set Environment Variables
        command: |
          echo 'export TEST_RN_PLATFORM=ios' >> $BASH_ENV
          echo 'export TEST_ENV=sauce' >> $BASH_ENV
    - run:
        name: Prepare build cache key
        command: find yarn.lock ios react-native-aztec/ios react-native-gutenberg-bridge/ios -type f -print0 | sort -z | xargs -0 shasum | tee ios-checksums.txt
    - restore_cache:
        name: Restore Build Cache
        keys:
          - ios-build-cache-{{ checksum "ios-checksums.txt" }}
    - restore_cache:
        name: Restore Dependencies Cache
        keys:
        - dependencies-v2-{{ checksum "react-native-aztec/ios/Cartfile.resolved" }}-{{
          checksum "yarn.lock" }}
        - dependencies-v2-{{ checksum "react-native-aztec/ios/Cartfile.resolved" }}
        - dependencies-v2-
    - run:
        name: Yarn preios (if needed)
        command: test -e ios/build/gutenberg/Build/Products/Release-iphonesimulator/gutenberg.app || yarn preios
    - save_cache:
        name: Save Dependencies Cache
        key: dependencies-v2-{{ checksum "react-native-aztec/ios/Cartfile.resolved" }}-{{
          checksum "yarn.lock" }}
        paths:
        - react-native-aztec/ios/Carthage
        - ~/.rncache
    - run:
        name: Build (if needed)
        command: test -e ios/build/gutenberg/Build/Products/Release-iphonesimulator/gutenberg.app || yarn react-native run-ios --configuration Release --no-packager
    - run:
        name: Bundle iOS
        command: yarn test:e2e:bundle:ios
    - run:
        name: Generate .app file for testing
        command: WORK_DIR=$(pwd) && cd ./ios/build/gutenberg/Build/Products/Release-iphonesimulator && zip -r $WORK_DIR/ios/Gutenberg.app.zip gutenberg.app
    - run:
        name: Upload .app to sauce labs
        command: |
          source bin/sauce-pre-upload.sh
          curl -u "$SAUCE_USERNAME:$SAUCE_ACCESS_KEY" -X POST -H "Content-Type: application/octet-stream" https://saucelabs.com/rest/v1/storage/automattic/Gutenberg-$SAUCE_FILENAME.app.zip?overwrite=true --data-binary @./ios/Gutenberg.app.zip
    - run:
        name: Run Device Tests
        command: |
          yarn device-tests
        environment:
          JEST_JUNIT_OUTPUT: "reports/test-results/ios-test-results.xml"
    - store_test_results:
        path: ./reports/test-results
    - run:
        name: Prepare build cache
        command: rm ios/build/gutenberg/Build/Products/Release-iphonesimulator/gutenberg.app/main.jsbundle
    - save_cache:
        name: Save Build Cache
        key: ios-build-cache-{{ checksum "ios-checksums.txt" }}
        paths:
          - ios/build/gutenberg/Build/Products/Release-iphonesimulator/gutenberg.app

workflows:
  gutenberg-mobile:
    jobs:
      - checks:
          name: Check Correctness
          check-correctness: true
      - checks:
          name: Test iOS
          platform: ios
          check-tests: true
      - checks:
          name: Test Android
          platform: android
          check-tests: true
      - ios-device-checks:
          name: Test iOS on Device
      - android-device-checks:
          name: Test Android on Device
