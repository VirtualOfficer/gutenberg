.editor-document-bar {
	display: flex;
	align-items: center;
	height: $button-size-compact;
	justify-content: space-between;
	// Flex items will, by default, refuse to shrink below a minimum
	// intrinsic width. In order to shrink this flexbox item, and
	// subsequently truncate child text, we set an explicit min-width.
	// See https://dev.w3.org/csswg/css-flexbox/#min-size-auto
	min-width: 0;
	background: $gray-100;
	border-radius: $grid-unit-05;
	width: min(100%, 416px);

	&:hover {
		background-color: $gray-200;
		transition: all 0.1s ease-out;
		@include reduce-motion("transition");
	}

	.components-button {
		border-radius: $grid-unit-05;
		transition: all 0.1s ease-out;
		@include reduce-motion("transition");
	}

	@include break-large() {
		width: min(100%, 450px);
	}
}

.editor-document-bar__command {
	display: flex;
	flex-grow: 1;
	color: var(--wp-block-synced-color);
	position: relative;
}

.editor-document-bar__title {
	overflow: hidden;
	color: $gray-900;
	height: auto;
	position: absolute;
	padding-left: 0;
	padding-right: 0;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	max-width: 70%;

	&:focus:not(:disabled) {
		outline: none;
		box-shadow: none;
	}

	.editor-document-bar.is-global & {
		color: var(--wp-block-synced-color);
	}

	.block-editor-block-icon {
		min-width: $grid-unit-30;
		flex-shrink: 0;
	}

	span {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		color: currentColor;
	}
}

.editor-document-bar__shortcut {
	color: $gray-800;
	min-width: $grid-unit-30;
	height: auto;
	flex-grow: 2;
	text-align: right;
	position: relative; // This is always the button clicked, not the title.
	z-index: 2;
	display: initial;

	&:hover {
		color: $gray-800;
	}
}

.editor-document-bar__back.components-button.has-icon.has-text {
	min-width: $button-size;
	flex-shrink: 0;
	color: $gray-700;
	gap: 0;
	z-index: 3;
	position: absolute;

	&:hover {
		color: $gray-900;
		background-color: transparent;
	}
}
