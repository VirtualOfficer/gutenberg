// The height (4px greater than compact buttons) is to create room for focus rings of contained buttons.
$bar-height: $button-size-compact + $grid-unit-05;
$bar-content-inset: ( $bar-height - $button-size-compact ) * 0.5;
$back-button-width-fallback: 74px;

.editor-document-bar {
	display: flex;
	justify-content: space-between;
	// Flex items will, by default, refuse to shrink below a minimum
	// intrinsic width. In order to shrink this flexbox item, and
	// subsequently truncate child text, we set an explicit min-width.
	// See https://dev.w3.org/csswg/css-flexbox/#min-size-auto
	min-width: 0;
	height: $bar-height;
	border-radius: $grid-unit-05;
	box-shadow: inset 0 0 0 var(--wp-admin-border-width-focus, $border-width-focus-fallback) $gray-100;
	gap: $bar-content-inset;
	padding: $bar-content-inset;
	width: min(100%, 416px);
	overflow: hidden;

	@include break-large() {
		width: min(100%, 450px);
	}

}

.editor-document-bar__core {
	position: relative;
	display: flex;
	align-items: center;
	flex-grow: 1;
	max-width: 100%;

	.has-back-button.editor-document-bar & {
		// Prevents transitory overflow during animation by limiting the width
		// to 100% minus the back button width plus the gap.
		max-width: calc(100% - (#{$bar-content-inset} + var(--back-button-width, #{$back-button-width-fallback})));
	}

	button {
		max-width: 100%;
		position: absolute;
		inset-inline: 0;
		justify-content: flex-end;
	}
}

.editor-document-bar__title {
	position: relative;
	flex-grow: 1;
	color: $gray-900;
	gap: $grid-unit-05;
	display: flex;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	pointer-events: none;

	// Ensures centered alignment and prevents overlapping of the contents.
	@include break-medium() {
		// Offsets by the width of the command shortcut label plus its spacing from the side plus the gap.
		padding-inline: $grid-unit-30 + $grid-unit-15 + $grid-unit-05;
	}

	// Offsets by the width of the back button when present.
	.has-back-button .editor-document-bar__core & {
		padding-inline: 0 var(--back-button-width, $back-button-width-fallback);
	}

	&.is-global {
		color: var(--wp-block-synced-color);
	}

	.block-editor-block-icon {
		fill: currentColor;
		min-width: $grid-unit-30;
		flex-shrink: 0;
	}

	h1 {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		color: currentColor;
	}
}

.editor-document-bar__shortcut {
	color: $gray-800;
	min-width: $grid-unit-30;
	display: none;

	@include break-medium() {
		display: initial;
	}
}

.editor-document-bar__back.components-button.has-icon.has-text {
	align-self: center;
	min-width: $button-size;
	flex-shrink: 0;
	color: $gray-700;
	gap: 0;

	&:hover {
		color: $gray-900;
	}
}
